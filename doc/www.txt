*www.txt* Plugin to open enriched urls from vim

Official repository: https://github.com/waiting-for-dev/vim-www

==============================================================================
CONTENTS                                   *vim-www* *www.vim* *www-contents*

1. Usage ................ |www-usage|
2. Defaults ............. |www-defaults|
3. Commands ............. |www-commands|
4. Mappings ............. |www-mappings|
5. Configuration ........ |www-configuration|
6. Bugs ................. |www-bugs|
7. Contributing ......... |www-contributing|
8. Version .............. |www-version|
9. License .............. |www-license|
==============================================================================
USAGE                                                               *www-usage*

|vim-www| just opens urls in your web browser. But |vim-www| understands
three types of url references:

* A typical URI, e.g. http://vim.org .
* A defined plain tag. E.g., tag "vimcom" can be configured to
 reference http://www.vim.org/community.php .
* A defined search engine tag. E.g., tag "g?" can be configured to
 search in google a query that can be provided.

Tags can be configured creating the dictionary |g:www_urls| in your .vimrc.
E.g.: >

    let g:www_urls = {
             \ 'vimcom' : 'http://www.vim.org/community.php',
             \ 'g?' : 'https://www.google.com/search?q=',
             \
             \ }
<
Notice that search engine tags end with a "?" character and that the search
query will be appended to the defined url (look at |g:www_urls| for more
details).

To open those urls you use the command |:Wopen|, which accepts a url
reference as argument. E.g.: >
    
    :Wopen http://vim.org
    :Wopen vimcom
    :Wopen g?vim scripts
<
Above commands will open http://vim.org, http://www.vim.org/community.php urls
and the resulting url of searching the string "vim scripts" in google,
respectively.

If you preffer you can use |:Wopenmulti| command to open multiple urls in
one step. But, please, notice that, as it is a multiple arguments command, you must
scape blankspaces in the string you provide to search engines. E.g: >

    :Wopenmulti http://vim.org vim g?vim\ scripts
<
You can also configure google or any other as your default search engine,
through: >

    let g:www_default_search_engine = 'g?'
>
and then you can just do: >

    :Wsearch vim scripts

By default, google will be used.

Urls can also be grouped in sessions in the following way: >

    let g:www_sessions = {
             \ 'vim' : ['http://vim.org', 'vimcom', 'g?vim scripts'],
             \
             \ }

Then you can open in one step all referenced urls with: >

    :Wsession vim
>
There are also some convenient mappings:

* |<leader>wo| . In normal mode it will open the browser using the |WORD|
 under the cursor as url reference. In visual mode it will do the same with
your text selection.

* |<leader>ws| . In normal mode it will search the |WORD| under the cursor in
 your default search engine. In visual mode it will do the same with your
text selection.

Notice than, in all cases, url's without "://" on them will have automatically
"http://" prepended.
==============================================================================
DEFAULTS                                                         *www-defaults*

Some search engines are already provided by default by |vim-www|. Here it is
the current relation:

                     | Tag   | Website                  |
                     ------------------------------------
                     | g?    | https://google.com       |
                     | y?    | http://youtube.com       |
                     | gh?   | https://github.com       |
                     | bb?   | https://bitbucket.org    |
                     | so?   | http://stackoverflow.com |
                     | wiki? | http://en.wikipedia.org  |
                     | imdb? | http://www.imdb.com      |

Google ("g?") is the default search engine.

You can overwrite these defaults and define new ones with |g:www_urls|.
==============================================================================
COMMANDS                                                         *www-commands*

                                                                      *:Wopen*

:Wopen {urlreference} Opens {urlreference} in your browser. Url reference can
be a common URI, like "http://google.es", a plain tag, like "vim", or a search
engine tag, like "g?" followed by a search query (like "g?vim scripts"). When
{urlreference} is neither a tag, nor a seach engine tag, nor contains "://" in
it, "http://" will be prepended to it. Look at |g:www_urls| for information
about how and where define tags.

                                                                 *:Wopenmulti*

:Wopenmulti {urlreference} [{urlreference}...] Opens url references in your
browser. Look at |:Wopen| for information about {urlreference} values.

                                                                     :Wsession

:Wsession {sessionname} [{sessionname}...] Open one or more url sessions.
Look at |g:www_sessions| for information about how and where define session
names.

                                                                     *:Wsearch*

:Wsearch {query} Opens in your browser the page with the results of serching
{query} in your default search engine. Look at |g:www_default_search_engine|
for information about configuring your default search engine.
==============================================================================
MAPPINGS                                                         *www-mappings*

                                                                  *<leader>wo*

<leader>wo In normal mode opens the |WORD| under the cursor as a url
reference. In visual mode, does the same with the text selection. Look at
 |:Wopen| for information about what a url reference can be.


                                                                  *<leader>ws*

<leader>ws In normal mode opens your browser with the page with the results
of searching the |WORD| under the cursor in your default search engine. In
visual mode, does the same with the text selection. Look at
|g:www_default_search_engine| for information about how to configure your
default search engine.
==============================================================================
CONFIGURATION                                               *www-configuration*

                                                                  *g:www_urls*

A dictionary that contains your favourite tags. Keys are plain tags or search
engine tags.

Keys that are plain tags are words without spaces nor '?' symbols.  Their values
are the actual url they reference. E.g.: >

    let g:www_urls = {
         \ 'vim': 'http://vim.org',
    \ }

Keys that are search engine tags are words without spaces that end with '?'.
Their values are urls that will be appended with provided search query. If
the search query should be somewhere else (not at the end) use "{{QUERY}}" as
placeholder. E.g.: >

    let g:www_urls = {
         \ 'g?': 'https://www.google.com/search?q='
         \ 'gh?': 'https://github.com/search?q={{QUERY}}&ref=simplesearch'
    \ }
<
                                                              *g:www_sessions*

A dictionary that contains your sessions. Keys are words without spaces and
values are lists of plain tags or search engine tags with their search query.
Tags have to be defined in |g:www_urls| or in |vim-www| defaults. E.g.: >

    let g:www_sessions = {
        \ 'vim': ['vim', 'g?vim scriping']
    \ }
<
                                                 *g:www_default_search_engine*

Default search engine to use. The value is a search engine tag, like "g?" or
"y?" present in |g:www_urls| or in |vim-www| defaults.

                                                *g:www_launch_browser_command*

The command that will be used to launch your browser. If it is not set
(default), |vim-www| will try to make the best guess. Use "{{URL}}" placeholder
to tell where the actual url should be. E.g.: >

    let g:www_launch_browser_command = "icewasel {{URL}} &"
<
                                                              *g:www_map_keys*

Set this variable to 0 if you don't want |www-mappings| to be used.
==============================================================================
BUGS                                                                 *www-bugs*

Open a bug in https://github.com/waiting-for-dev/vim-www/issues
==============================================================================
CONTRIBUTING                                                 *www-contributing*

1. Fork the project ( http://github.com/waiting-for-dev/vim-www/fork )
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Add some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request

==============================================================================
VERSION                                                           *www-version*

|vim-www| follows Semantic Versioning system 2.0 (http://semver.org/). Current
version is 0.0.4.
==============================================================================
LICENSE                                                           *www-license*

The MIT Licence
http://www.opensource.org/licenses/mit-license.php

Copyright (c) 2014 Marc Busqué Pérez

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

  vim-www vim:tw=78:ts=8:ft=help:norl:
